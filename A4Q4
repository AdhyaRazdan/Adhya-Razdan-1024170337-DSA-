#include <iostream>
using namespace std;
#define MAX 256
#define QSIZE 100
class Queue {
    char arr[QSIZE];
    int front, rear;
public:
    Queue() { front = 0; rear = -1; }
    bool isEmpty() { return front > rear; }
    void enqueue(char x) { arr[++rear] = x; }
    char dequeue() { return arr[front++]; }
    char peek() { return arr[front]; }
};
void firstNonRepeating(char str[], int n) {
    int freq[MAX] = {0};
    Queue q;
    for (int i = 0; i < n; i++) {
        char ch = str[i];
        freq[ch]++;
        q.enqueue(ch);

        while (!q.isEmpty() && freq[q.peek()] > 1) {
            q.dequeue();
        }

        if (q.isEmpty())
            cout << "-1 ";
        else
            cout << q.peek() << " ";
    }
    cout << "\n";
}
int main() {
    char s[] = {'a','a','b','c'};
    int n = 4;
    firstNonRepeating(s, n);
}
